import { PromiseState, TrackedPromise } from "../promises/single/state.js";
/** Syncify a `TrackedPromise` (see `track`). Returns a state */
export declare function useTracked<T>(promise: TrackedPromise<T>): PromiseState<T>;
/** Syncify a `Promise`. Returns a state
 * #### Note
 * The returned state defaults to `pending`, and is updated on a `useEffect`.
 * If the promise could already be resolved and you want to reflect that, try using `track` and `useTracked`
 */
export declare function useSyncify<T>(promise: Promise<T>): PromiseState<T>;
