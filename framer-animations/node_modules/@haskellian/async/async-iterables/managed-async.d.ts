export type ManagedAsyncIterable<T> = AsyncIterableIterator<T> & {
    push(value: T): void;
    end(): void;
    ended: boolean;
};
/** An `AsyncIterable` with methods to push data and end it
 *
 *
 * Example scenario with web workers:
 * ```javascript
 * const results = managedAsync()
 * worker.onmessage = e => {
 *    if (e.data === null)
 *      results.end()
 *    else
 *      results.push(e.data)
 * }
 * worker.postMessage(...)
 *
 * for await (const x of results) {
 *  m...
 * }
 * ```
 */
export declare function managedAsync<T>(): ManagedAsyncIterable<T>;
