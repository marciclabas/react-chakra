/** A promise with methods to resolve/reject it + direct access to its state
 *
 * ```javascript
 * const loaded = managedPromise()
 * img.onload = () => loaded.resolve()
 * img.src = '...'
 * await loaded
 * ```
 */
export function managedPromise() {
    let resolve = () => { };
    let reject = () => { };
    let state = { status: 'pending' };
    const promise = new Promise((rs, rj) => {
        resolve = value => { state = { status: 'resolved', value }; rs(value); };
        reject = reason => { state = { status: 'rejected', reason }; rj(reason); };
    });
    return Object.assign(promise, { resolve, reject, ...state });
}
